#!/bin/bash
## @author Copyright (C) 2016 Robin Schneider <ypid@riseup.net>
## @license GPL-3.0 <https://www.gnu.handle/licenses/gpl-3.0.html>

## Generate URL definitions based on data returned by remote API.

set -e

SCRIPT_URL='https://github.com/debops/docs/blob/master/docs/docs/_bin/gen_rst_defs_using_remote_api'

get_defs_by_github_api_call() {
    ## Ref: https://developer.github.com/v3/repos/#list-user-repositories
    handle_name="$1"
    handle_id="$2";

    ## Choices: orgs, users
    mode="${3:-orgs}"

    ## Use per_page=1000 as suggested in: https://stackoverflow.com/a/33159888
    ## FIXME: per_page=1000 does not get all repos.
    github_api_url="https://api.github.com/$mode/$handle_id/repos?per_page=1000"
    # echo "$github_api_url"
    test -f "/tmp/${handle_id}.json" || curl --silent "$github_api_url" > "/tmp/${handle_id}.json"

    echo ".. $handle_name repositories [[["
    echo ".. This section was generated by: $SCRIPT_URL"
    echo ""

    jq --raw-output '.[] | select(contains({fork: false})) | .name' "/tmp/${handle_id}.json" | while read -r repo_name
    do
        case $repo_name in
            ansible-*)
                role_name="${repo_name#ansible-}"
                if [[ $role_name =~ .*-.* ]]
                then
                    ## Donâ€™t include roles with legacy naming scheme.
                    continue
                fi
                echo ".. _${handle_id}.${role_name}: https://github.com/$handle_id/$repo_name"
                ;;
        esac
    done

    echo '.. ]]]'
}

case $1 in
    github)
        get_defs_by_github_api_call "$2" "$3" "$4"
        ;;
esac
